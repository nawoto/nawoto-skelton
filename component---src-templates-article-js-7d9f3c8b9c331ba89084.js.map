{"version":3,"file":"component---src-templates-article-js-7d9f3c8b9c331ba89084.js","mappings":"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","sources":["webpack://nawo.to/./src/components/header.tsx","webpack://nawo.to/./src/components/bio.js","webpack://nawo.to/./src/components/layout.js","webpack://nawo.to/./src/components/webmentions.js","webpack://nawo.to/./src/templates/article.js"],"sourcesContent":["import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Header = ({ title }) => {\n  return (\n    <header>\n      <div className=\"hover-style py-6\">\n        <h3 className=\"text-center text-6xl font-black tracking-widest md:text-8xl\">\n          <Link to=\"/\">{title}</Link>\n        </h3>\n      </div>\n      <nav>\n        <ul className=\"grid grid-cols-2 divide-x text-center text-lg uppercase md:grid-cols-4\">\n          <li className=\"hover-style border-y\">\n            <Link to=\"/\">top</Link>\n          </li>\n          <li className=\"hover-style border-y\">\n            <Link to=\"/logs\">log</Link>\n          </li>\n          <li className=\"hover-style border-b md:border-y\">\n            <Link to=\"/texts\">texts</Link>\n          </li>\n          <li className=\"hover-style border-b md:border-y\">\n            <Link to=\"/about\">about</Link>\n          </li>\n        </ul>\n      </nav>\n    </header>\n  )\n}\n\nexport default Header\n","/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql, Link } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faSquareRss } from \"@fortawesome/free-solid-svg-icons\"\nimport {\n  faTwitter,\n  faGithub,\n  faSpeakerDeck,\n  faInstagram,\n} from \"@fortawesome/free-brands-svg-icons\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n\n  return (\n    <div>\n      <h3 className=\"hover-style border-y text-center text-2xl font-medium uppercase tracking-widest md:hidden\">\n        author\n      </h3>\n      <div className=\"hover-style h-card flex md:grid md:grid-cols-1\">\n        <div className=\"border md:mx-auto md:border-none md:pt-1\">\n          <StaticImage\n            className=\"z-10 overflow-hidden rounded-full\"\n            imgClassName=\"u-photo\"\n            layout=\"fixed\"\n            formats={[\"auto\", \"webp\", \"avif\"]}\n            src=\"../images/profile-pic.png\"\n            width={138}\n            height={138}\n            quality={95}\n            alt=\"Profile picture\"\n          />\n        </div>\n        {author?.name && (\n          <div className=\"w-full border-b p-1 md:text-center\">\n            <p className=\"text-lg font-bold\">\n              <Link to=\"/\" className=\"p-name u-url\">\n                {author.name}\n              </Link>\n            </p>\n            <p className=\"text-sm md:px-10 md:text-left\">\n              <span className=\"p-name\">西村直人</span>。 おもに\n              <span className=\"p-nickname\">nawoto</span> という名前で\n              <span className=\"p-note\">いろいろしています</span>\n            </p>\n            <p className=\"text-right text-sm md:text-center\">\n              <Link to=\"/about\" className=\"uppercase underline\">\n                read me\n              </Link>\n            </p>\n            <ul className=\"flex flex-row justify-end pt-2 text-2xl md:justify-center\">\n              <li className=\"hover-style px-2\">\n                <a\n                  href=\"https://twitter.com/nawoto\"\n                  className=\"u-url\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  <FontAwesomeIcon icon={faTwitter} />\n                </a>\n              </li>\n              <li className=\"hover-style px-2\">\n                <a\n                  href=\"https://github.com/nawoto/\"\n                  className=\"u-url\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  <FontAwesomeIcon icon={faGithub} />\n                </a>\n              </li>\n              <li className=\"hover-style px-2\">\n                <a\n                  href=\"https://speakerdeck.com/nawoto\"\n                  className=\"u-url\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  <FontAwesomeIcon icon={faSpeakerDeck} />\n                </a>\n              </li>\n              <li className=\"hover-style px-2\">\n                <a\n                  href=\"https://www.instagram.com/nawoto/\"\n                  className=\"u-url\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  <FontAwesomeIcon icon={faInstagram} />\n                </a>\n              </li>\n              <li className=\"hover-style pl-2\">\n                <Link to=\"/rss.xml\">\n                  <FontAwesomeIcon icon={faSquareRss} />\n                </Link>\n              </li>\n            </ul>\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default Bio\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport Header from \"../components/header\"\nimport Bio from \"../components/bio\"\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n\n  return (\n    <div data-is-root-path={isRootPath}>\n      <Header title={title} />\n      <main>\n        <div className=\"md:flex md:flex-row\">\n          {!isRootPath && (\n            <div className=\"md:order-last md:basis-3/4\">{children}</div>\n          )}\n          <div className=\"border-r md:basis-1/4\">\n            <Bio />\n          </div>\n          {isRootPath && <div className=\"md:basis-3/4\">{children}</div>}\n        </div>\n      </main>\n      <footer className=\"border-t text-center text-sm\">\n        © {new Date().getFullYear()}, NISHIMURA Naoto All Rights Reserved.\n        <span className=\"mx-5 text-xs underline\">\n          <Link to=\"/privacy\">Privacy Policy</Link>\n        </span>\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout\n","import * as React from \"react\"\n\nconst WebMentions = ({ edges }) => {\n  const likes = edges.filter(({ node }) => node.wmProperty === \"like-of\")\n  const likeAuthors = likes.map(\n    ({ node }) =>\n      node.author && {\n        wmId: node.wmId,\n        wmSource: node.wmSource,\n        ...node.author,\n      }\n  )\n\n  return (\n    <div>\n      <h3 className=\"border-b text-center\">Webmentions</h3>\n\n      <div>\n        {likes.length === 0 ? (\n          <span className=\"text-gray-500\">No Webmention</span>\n        ) : null}\n\n        {likeAuthors.map(author => (\n          <div className=\"py-1 text-lg md:flex\" key={author.wmId}>\n            <p className=\"flex\">\n              <a href={author.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                <img\n                  alt={author.name}\n                  src={author.photo}\n                  loading=\"lazy\"\n                  className=\"z-index overflow-hidden rounded-lg\"\n                  width={30}\n                  height={30}\n                />\n              </a>\n\n              <span className=\"px-1 underline decoration-gray-400\">\n                <a href={author.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                  {author.name}\n                </a>\n              </span>\n            </p>\n            <p>\n              <a\n                href={author.wmSource}\n                className=\"underline decoration-gray-400\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                liked this\n              </a>\n            </p>\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default WebMentions\n","import React, { useEffect } from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport { LikeButton } from \"@lyket/react\"\nimport {\n  HatenaIcon,\n  HatenaShareButton,\n  TwitterIcon,\n  TwitterShareButton,\n} from \"react-share\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport Comments from \"../components/comments\"\nimport WebMentions from \"../components/webmentions\"\n\nconst ArticleTemplate = ({ data, location }) => {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const siteUrl = data.site.siteMetadata?.siteUrl\n  const { previous, next } = data\n\n  const pageTitle = `${post.frontmatter.title} | ${siteTitle}`\n  const shareUrl = `${siteUrl}${post.fields.slug}`\n\n  const { ogimage } = post.frontmatter\n  const ogImagePath = ogimage && ogimage.childImageSharp.fixed.src\n\n  useEffect(() => {\n    const script = document.createElement(\"script\")\n    script.type = \"text/javascript\"\n\n    var attr = document.createAttribute(\"src\")\n    attr.value = \"//www.instagram.com/embed.js\"\n    script.setAttributeNode(attr)\n\n    const head = document.getElementsByTagName(\"head\")[0]\n    head.appendChild(script)\n  })\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo\n        title={pageTitle}\n        description={post.frontmatter.description || post.excerpt}\n        image={ogImagePath}\n      />\n      <article\n        itemScope\n        itemType=\"http://schema.org/Article\"\n        className=\"h-entry\"\n      >\n        <header className=\"p-2\">\n          <h1 itemProp=\"headline\" className=\"p-name text-3xl font-bold\">\n            {post.frontmatter.title}\n          </h1>\n          <p className=\"dt-published\">{post.frontmatter.date}</p>\n        </header>\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n          className=\"e-content prose px-4 py-3 md:mx-10 md:max-w-fit\"\n        />\n        <footer className=\"md:mx-10\">\n          <p className=\"px-4 text-sm text-gray-400\">\n            <a href={shareUrl} className=\"u-url pr-1\">\n              this article\n            </a>\n            written by\n            <a\n              href=\"http://nawo.to/about\"\n              rel=\"author\"\n              className=\"h-card p-author px-1\"\n            >\n              NISHIMURA Naoto\n            </a>\n            (<span className=\"p-nickname\">nawoto</span>)\n          </p>\n          <TwitterShareButton url={shareUrl} title={pageTitle} className=\"mx-4\">\n            <TwitterIcon round={true} size={28} />\n          </TwitterShareButton>\n          <HatenaShareButton url={shareUrl} title={pageTitle}>\n            <HatenaIcon round={true} size={28} />\n          </HatenaShareButton>\n          <LikeButton\n            id={post.id}\n            namespace={post.fields.collection}\n            component={LikeButton.templates.Twitter}\n          />\n          <Comments />\n          <WebMentions {...data.allWebMentionEntry} />\n        </footer>\n      </article>\n      <nav>\n        <ul className=\"my-5 grid grid-cols-2 divide-x border-y text-center text-2xl uppercase\">\n          <li className=\"hover-style p-3\">\n            {previous ? (\n              <Link\n                to={previous.fields.slug}\n                title={previous.frontmatter.title}\n                rel=\"prev\"\n              >\n                prev\n              </Link>\n            ) : (\n              <span className=\"text-gray-400\">prev</span>\n            )}\n          </li>\n          <li className=\"hover-style p-3\">\n            {next ? (\n              <Link\n                to={next.fields.slug}\n                title={next.frontmatter.title}\n                rel=\"next\"\n              >\n                next\n              </Link>\n            ) : (\n              <span className=\"text-gray-400\">next</span>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport default ArticleTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n    $permaLink: String\n  ) {\n    site {\n      siteMetadata {\n        siteUrl\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      fields {\n        slug\n        collection\n      }\n      frontmatter {\n        title\n        date(formatString: \"YYYY/MM/DD\")\n        description\n        ogimage {\n          childImageSharp {\n            fixed {\n              src\n            }\n          }\n        }\n      }\n    }\n    allWebMentionEntry(filter: { wmTarget: { eq: $permaLink } }) {\n      edges {\n        node {\n          wmTarget\n          wmSource\n          wmProperty\n          wmId\n          type\n          url\n          likeOf\n          author {\n            url\n            type\n            photo\n            name\n          }\n          content {\n            text\n          }\n        }\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n"],"names":["title","className","Link","to","author","useStaticQuery","site","siteMetadata","S","imgClassName","layout","formats","src","width","height","quality","alt","name","href","target","rel","icon","faTwitter","faGithub","faSpeakerDeck","faInstagram","faSquareRss","location","children","isRootPath","pathname","Date","getFullYear","likes","edges","filter","node","wmProperty","likeAuthors","map","wmId","wmSource","length","key","url","photo","loading","data","post","markdownRemark","siteTitle","siteUrl","previous","next","pageTitle","frontmatter","shareUrl","fields","slug","ogimage","ogImagePath","childImageSharp","fixed","useEffect","script","document","createElement","type","attr","createAttribute","value","setAttributeNode","getElementsByTagName","appendChild","description","excerpt","image","itemScope","itemType","itemProp","date","dangerouslySetInnerHTML","__html","html","TwitterShareButton","TwitterIcon","round","size","HatenaShareButton","HatenaIcon","LikeButton","id","namespace","collection","component","allWebMentionEntry"],"sourceRoot":""}