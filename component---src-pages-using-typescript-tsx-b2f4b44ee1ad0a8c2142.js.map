{"version":3,"file":"component---src-pages-using-typescript-tsx-b2f4b44ee1ad0a8c2142.js","mappings":"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","sources":["webpack://nawo.to/./src/components/header.tsx","webpack://nawo.to/./src/components/bio.js","webpack://nawo.to/./src/components/layout.js","webpack://nawo.to/./src/pages/using-typescript.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Header = ({ title }) => {\n  return (\n    <header>\n      <div className=\"hover-style py-6\">\n        <h3 className=\"text-center text-6xl font-black tracking-widest md:text-8xl\">\n          <Link to=\"/\">{title}</Link>\n        </h3>\n      </div>\n      <nav>\n        <ul className=\"grid grid-cols-2 divide-x text-center text-lg uppercase md:grid-cols-4\">\n          <li className=\"hover-style border-y\">\n            <Link to=\"/\">top</Link>\n          </li>\n          <li className=\"hover-style border-y\">\n            <Link to=\"/logs\">log</Link>\n          </li>\n          <li className=\"hover-style border-b md:border-y\">\n            <Link to=\"/texts\">texts</Link>\n          </li>\n          <li className=\"hover-style border-b md:border-y\">\n            <Link to=\"/about\">about</Link>\n          </li>\n        </ul>\n      </nav>\n    </header>\n  )\n}\n\nexport default Header\n","/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql, Link } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faSquareRss } from \"@fortawesome/free-solid-svg-icons\"\nimport {\n  faTwitter,\n  faGithub,\n  faSpeakerDeck,\n  faInstagram,\n} from \"@fortawesome/free-brands-svg-icons\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n\n  return (\n    <div className=\"h-card\">\n      <h3 className=\"hover-style border-y text-center text-2xl font-medium uppercase tracking-widest md:hidden\">\n        author\n      </h3>\n      <div className=\"hover-style flex md:grid md:grid-cols-1\">\n        <div className=\"border md:mx-auto md:border-none md:pt-1\">\n          <StaticImage\n            className=\"z-10 overflow-hidden rounded-full\"\n            imgClassName=\"u-photo\"\n            layout=\"fixed\"\n            formats={[\"auto\", \"webp\", \"avif\"]}\n            src=\"../images/profile-pic.png\"\n            width={138}\n            height={138}\n            quality={95}\n            alt=\"Profile picture\"\n          />\n        </div>\n        {author?.name && (\n          <div className=\"w-full border-b p-1 md:text-center\">\n            <p className=\"text-lg font-bold\">\n              <Link to=\"/\" className=\"p-name u-url\">{author.name}</Link>\n            </p>\n            <p className=\"text-sm md:px-10 md:text-left p-note\">\n              <span className=\"p-name\">西村直人</span>。おもに <span className=\"p-nickname\">nawoto</span> という名前でいろいろしています\n              {author.summary}\n            </p>\n            <p className=\"text-right text-sm md:text-center\">\n              <Link to=\"/about\" className=\"uppercase underline\">\n                read me\n              </Link>\n            </p>\n            <ul className=\"flex flex-row justify-end pt-2 text-2xl md:justify-center\">\n              <li className=\"hover-style px-2\">\n                <a href=\"https://twitter.com/nawoto\">\n                  <FontAwesomeIcon icon={faTwitter} />\n                </a>\n              </li>\n              <li className=\"hover-style px-2\">\n                <a href=\"https://github.com/nawoto/\">\n                  <FontAwesomeIcon icon={faGithub} />\n                </a>\n              </li>\n              <li className=\"hover-style px-2\">\n                <a href=\"https://speakerdeck.com/nawoto\">\n                  <FontAwesomeIcon icon={faSpeakerDeck} />\n                </a>\n              </li>\n              <li className=\"hover-style px-2\">\n                <a href=\"https://www.instagram.com/nawoto/\">\n                  <FontAwesomeIcon icon={faInstagram} />\n                </a>\n              </li>\n              <li className=\"hover-style pl-2\">\n                <Link to=\"/rss.xml\">\n                  <FontAwesomeIcon icon={faSquareRss} />\n                </Link>\n              </li>\n            </ul>\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default Bio\n","import * as React from \"react\"\nimport Header from \"../components/header\"\nimport Bio from \"../components/bio\"\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n\n  return (\n    <div data-is-root-path={isRootPath}>\n      <Header title={title} />\n      <main>\n        <div className=\"md:flex md:flex-row\">\n          {!isRootPath && (\n            <div className=\"md:order-last md:basis-3/4\">{children}</div>\n          )}\n          <div className=\"border-r md:basis-1/4\">\n            <Bio />\n          </div>\n          {isRootPath && <div className=\"md:basis-3/4\">{children}</div>}\n        </div>\n      </main>\n      <footer className=\"border-t text-center text-sm\">\n        © {new Date().getFullYear()}, NISHIMURA Naoto All Rights Reserved.\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout\n","// If you don't want to use TypeScript you can delete this file!\nimport * as React from \"react\"\nimport { PageProps, Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\ntype DataProps = {\n  site: {\n    buildTime: string\n  }\n}\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({\n  data,\n  path,\n  location,\n}) => (\n  <Layout title=\"Using TypeScript\" location={location}>\n    <Seo title=\"Using TypeScript\" />\n    <h1>Gatsby supports TypeScript by default!</h1>\n    <p>\n      This means that you can create and write <em>.ts/.tsx</em> files for your\n      pages, components etc. Please note that the <em>gatsby-*.js</em> files\n      (like gatsby-node.js) currently don't support TypeScript yet.\n    </p>\n    <p>\n      For type checking you'll want to install <em>typescript</em> via npm and\n      run <em>tsc --init</em> to create a <em>tsconfig</em> file.\n    </p>\n    <p>\n      You're currently on the page \"{path}\" which was built on{\" \"}\n      {data.site.buildTime}.\n    </p>\n    <p>\n      To learn more, head over to our{\" \"}\n      <a href=\"https://www.gatsbyjs.com/docs/typescript/\">\n        documentation about TypeScript\n      </a>\n      .\n    </p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport default UsingTypescript\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`\n"],"names":["title","className","Link","to","author","useStaticQuery","site","siteMetadata","S","imgClassName","layout","formats","src","width","height","quality","alt","name","summary","href","icon","faTwitter","faGithub","faSpeakerDeck","faInstagram","faSquareRss","location","children","isRootPath","pathname","Date","getFullYear","data","path","buildTime"],"sourceRoot":""}