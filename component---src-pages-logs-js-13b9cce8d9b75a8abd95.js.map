{"version":3,"file":"component---src-pages-logs-js-13b9cce8d9b75a8abd95.js","mappings":"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","sources":["webpack://nawo.to/./src/components/header.tsx","webpack://nawo.to/./src/components/bio.js","webpack://nawo.to/./src/components/layout.js","webpack://nawo.to/./src/pages/logs.js"],"sourcesContent":["import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Header = ({ title }) => {\n  return (\n    <header>\n      <div className=\"hover-style py-6\">\n        <h3 className=\"text-center text-6xl font-black tracking-widest md:text-8xl\">\n          <Link to=\"/\">{title}</Link>\n        </h3>\n      </div>\n      <nav>\n        <ul className=\"grid grid-cols-2 divide-x text-center text-lg uppercase md:grid-cols-4\">\n          <li className=\"hover-style border-y\">\n            <Link to=\"/\">top</Link>\n          </li>\n          <li className=\"hover-style border-y\">\n            <Link to=\"/logs\">log</Link>\n          </li>\n          <li className=\"hover-style border-b md:border-y\">\n            <Link to=\"/texts\">texts</Link>\n          </li>\n          <li className=\"hover-style border-b md:border-y\">\n            <Link to=\"/about\">about</Link>\n          </li>\n        </ul>\n      </nav>\n    </header>\n  )\n}\n\nexport default Header\n","/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql, Link } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faSquareRss } from \"@fortawesome/free-solid-svg-icons\"\nimport {\n  faTwitter,\n  faGithub,\n  faSpeakerDeck,\n  faInstagram,\n} from \"@fortawesome/free-brands-svg-icons\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n\n  return (\n    <div>\n      <h3 className=\"hover-style border-y text-center text-2xl font-medium uppercase tracking-widest md:hidden\">\n        author\n      </h3>\n      <div className=\"hover-style h-card flex md:grid md:grid-cols-1\">\n        <div className=\"border md:mx-auto md:border-none md:pt-1\">\n          <StaticImage\n            className=\"z-10 overflow-hidden rounded-full\"\n            imgClassName=\"u-photo\"\n            layout=\"fixed\"\n            formats={[\"auto\", \"webp\", \"avif\"]}\n            src=\"../images/profile-pic.png\"\n            width={138}\n            height={138}\n            quality={95}\n            alt=\"Profile picture\"\n          />\n        </div>\n        {author?.name && (\n          <div className=\"w-full border-b p-1 md:text-center\">\n            <p className=\"text-lg font-bold\">\n              <Link to=\"/\" className=\"p-name u-url\">\n                {author.name}\n              </Link>\n            </p>\n            <p className=\"text-sm md:px-10 md:text-left\">\n              <span className=\"p-name\">西村直人</span>。 おもに\n              <span className=\"p-nickname\">nawoto</span> という名前で\n              <span className=\"p-note\">いろいろしています</span>\n            </p>\n            <p className=\"text-right text-sm md:text-center\">\n              <Link to=\"/about\" className=\"uppercase underline\">\n                read me\n              </Link>\n            </p>\n            <ul className=\"flex flex-row justify-end pt-2 text-2xl md:justify-center\">\n              <li className=\"hover-style px-2\">\n                <a\n                  href=\"https://twitter.com/nawoto\"\n                  className=\"u-url\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  <FontAwesomeIcon icon={faTwitter} />\n                </a>\n              </li>\n              <li className=\"hover-style px-2\">\n                <a\n                  href=\"https://github.com/nawoto/\"\n                  className=\"u-url\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  <FontAwesomeIcon icon={faGithub} />\n                </a>\n              </li>\n              <li className=\"hover-style px-2\">\n                <a\n                  href=\"https://speakerdeck.com/nawoto\"\n                  className=\"u-url\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  <FontAwesomeIcon icon={faSpeakerDeck} />\n                </a>\n              </li>\n              <li className=\"hover-style px-2\">\n                <a\n                  href=\"https://www.instagram.com/nawoto/\"\n                  className=\"u-url\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  <FontAwesomeIcon icon={faInstagram} />\n                </a>\n              </li>\n              <li className=\"hover-style pl-2\">\n                <Link to=\"/rss.xml\">\n                  <FontAwesomeIcon icon={faSquareRss} />\n                </Link>\n              </li>\n            </ul>\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default Bio\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport Header from \"../components/header\"\nimport Bio from \"../components/bio\"\nimport Footer from \"../components/footer\"\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n\n  return (\n    <div data-is-root-path={isRootPath}>\n      <Header title={title} />\n      <main>\n        <div className=\"md:flex md:flex-row\">\n          {!isRootPath && (\n            <div className=\"md:order-last md:basis-3/4\">{children}</div>\n          )}\n          <div className=\"border-r md:basis-1/4\">\n            <Bio />\n          </div>\n          {isRootPath && <div className=\"md:basis-3/4\">{children}</div>}\n        </div>\n      </main>\n      <Footer />\n    </div>\n  )\n}\n\nexport default Layout\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst LogsPage = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <Seo title={`LOG | ${siteTitle}`} />\n        <p>No contents found.</p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo title={`LOG | ${siteTitle}`} />\n      <div className=\"hover-style py-4 text-center\">\n        <h1 className=\"text-4xl font-semibold uppercase tracking-widest\">\n          log\n        </h1>\n        <p className=\"text-sm text-gray-500\">\n          日々のなんとなくを書き留めてます✍️\n        </p>\n      </div>\n      <ol style={{ listStyle: `none` }}>\n        {posts.map(post => {\n          const title = post.frontmatter.title || post.fields.slug\n\n          return (\n            <li\n              key={post.fields.slug}\n              className=\"hover-style border-y border-solid py-2\"\n            >\n              <article\n                className=\"mx-auto w-5/6\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header className=\"py-4\">\n                  <h2 className=\"text-2xl font-bold\">\n                    <Link to={post.fields.slug} itemProp=\"url\">\n                      <span itemProp=\"headline\">{title}</span>\n                    </Link>\n                  </h2>\n                  <small>{post.frontmatter.date}</small>\n                </header>\n                <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: post.frontmatter.description || post.excerpt,\n                    }}\n                    itemProp=\"description\"\n                  />\n                  <div className=\"my-2 border py-2 text-center uppercase\">\n                    <Link to={post.fields.slug}>read more</Link>\n                  </div>\n                </section>\n              </article>\n            </li>\n          )\n        })}\n      </ol>\n    </Layout>\n  )\n}\n\nexport default LogsPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { fields: { collection: { eq: \"blog\" } } }\n    ) {\n      nodes {\n        excerpt\n        fields {\n          collection\n          slug\n        }\n        frontmatter {\n          date(formatString: \"YYYY/MM/DD\")\n          title\n          description\n        }\n      }\n    }\n  }\n`\n"],"names":["title","className","Link","to","author","useStaticQuery","site","siteMetadata","S","imgClassName","layout","formats","src","width","height","quality","alt","name","href","target","rel","icon","faTwitter","faGithub","faSpeakerDeck","faInstagram","faSquareRss","location","children","isRootPath","pathname","data","siteTitle","posts","allMarkdownRemark","nodes","length","style","listStyle","map","post","frontmatter","fields","slug","key","itemScope","itemType","itemProp","date","dangerouslySetInnerHTML","__html","description","excerpt"],"sourceRoot":""}